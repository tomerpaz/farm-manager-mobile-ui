import React, { useEffect, useState } from 'react';
import './App.css';
import { connect } from 'react-redux';
import { getJwtToken } from './actions/util/JwtUtil';
import { ThemeProvider } from '@mui/material/styles';
import LocaleApplication from './components/frame/LocaleApplication';
import { buildTheme } from './utils';
import {
    setMessage,
    setWarnMessage,
    getDomainsByYear,
    getSelectionDomainsByYear, setSelectionYearFilter,
    deleteDomain,
    deleteField,
    deleteSite,
    getDomain,
    getField, toggleFieldLayer,
    getGlobalData,
    getSite, getSites, clearSite,
    init,
    loadTranslation,
    saveDomain,
    saveSite,
    selectDomain,
    selectField,
    selectSite,
    setDrawPolygon,
    setDrawPolygonMode,
    signOut,
    sortFields,
    getFields,
    setFieldFilter,
    setYearFilter,
    setActivity,
    getActivity,
    getNewActivity, deleteParentField, selectParentField, getParentField, getParentFields,
    getWaybills,
    setWaybills,
    getProcurement, setProcurement,
    clearDashboard,
    getPlantationDashboard, getDomainDashboard, getFieldCropRotations,
    getUsers, getAuthorizations, toggleAuthorizations, selectUser,
    getCustomersAndSuppliers, getCustomerOrSupplier, selectCustomerOrSupplier, deleteCustomerOrSupplier,
    deleteExecutor, getExecutors, getExecutor, selectExecutor,
    deleteEquipment, getEquipments, getEquipment, selectEquipment,
    deleteVariety, getVarieties, getVariety, selectVariety,
    deleteFertilizer, getFertilizers, getFertilizer, selectFertilizer,
    deleteWaterSource, getWaterSources, getWaterSource, selectWaterSource,
    deleteProduct, getProducts, getProduct, selectProduct,
    deletePesticide, getPesticides, getPesticide, selectPesticide,
    deleteAccessory, getAccessories, getAccessory, selectAccessory,
    deleteContainer, getContainers, getContainer, selectContainer, saveContainer,
    deleteCrop, getCrops, getCrop, selectCrop, saveCrop,
    deleteBaseCrop, getBaseCrops, getBaseCrop, selectBaseCrop,
    deleteWarehouse, getWarehouses, getWarehouse, selectWarehouse, saveWarehouse,
    deleteActivityDef, getActivityDefs, getActivityDef, selectActivityDef, saveActivityDef,
    deleteActivityDefType, getActivityDefTypes, getActivityDefType, selectActivityDefType, saveActivityDefType,
    deleteCompost, getComposts, getCompost, selectCompost,
    deleteDisinfectant, getDisinfectants, getDisinfectant, selectDisinfectant,
    getFiles, uploadFiles, uploadFile, deleteFile, setErrorMessage, moveFile,
    getInventoryUpdate, deleteInventoryUpdate, selectInventoryUpdate, setFetchInventoryUpdate, getInventory,
    getWaterSystem, clearWaterSystem, saveValve, saveWaterSystemConfig, deleteWaterSystemConfig, syncWaterSystem,
    setDomainViewSize,
    getReportMetaData, emailReport,
    selectTariff, getTariff, setFetchTariffs, deleteTariff,
    setFetchMaintenance, selectMaintenance, getMaintenance, deleteMaintenance, duplicateMaintenance, clearMaintenance,
    setRiskAssessment, getRiskAssessment, getRisks, getRisk, selectRisk, deleteRisk,
    clearResource,
    deletePest, getPests, getPest, selectPest, clearPest,
    selectPesticideList, getPesticideList, getPesticideLists, deletePesticideList, selectPesticideListPesticide, clearPesticideList,
    duplicatePesticideList, deletePesticideListPesticide,
    saveBusiness, deleteBusiness, getBusinesses, getBusiness, selectBusiness, clearBusiness, selectBusinessUser,
    setActivityTableFilter, setActivityTableFetch, setActivityTableFreeText, setActivityTableEnd, setActivityTableStart,
    setActivityTableSorting, setActivityTableCurrentPage, getActivities,
    quickSaveResource,
    getFieldInPolygons,
    clearActivityDefType, clearActivityDef, clearTariff, clearField, clearParentField, clearWarehouse, clearContainer, clearCrop, clearInventoryUpdate,
    setUserMapCenter, setFieldFilterFreeText,
    agromonitoringSearchPolygon, getNdviHistory, getSenecingData, getPolygonAccumulatedData,
    getFianancialDashboard, getQuantitativeDashboard,
    recoverPassword, setTablePageSize,
    setProcurementFilterEnd, setProcurementFilterStart, setProcurementFilterFreeText, setProcurementFilter, getProcurements,
    setProcurementCurrentPage, setProcurementSorting,
    setPlanActivityTableFilter, setPlanActivityTableFreeText, setPlanActivityTableStart, setPlanActivityTableEnd, setPlanActivityTableCurrentPage, setPlanActivityTableSorting,
    getPlanActivities, setMapBaseLayer, duplicateTariff,
    setSupplierInvoice, duplicateValve, deletedValve,
    setDomainStatusFilter,
    deleteFertilizerHub, getFertilizerHubs, getFertilizerHub, selectFertilizerHub, clearFertilizerHub,
    listWaterSystemAccounts,
    getLinkedGrowers, agromonitoringSearchPolygons, changeImageryDate, changeNdviPalette,
    getGisPolygons, getGisPolygonId, setGisPolygonId, getGisPolygonName, setGisPolygonName,
    getGisPolygonAttributes, deleteGisData,
    getPestGeoJson, setMapRefDate, setMapInfectionLevel, setMapTimeRange, setMapPests,
    getWaypointsGeoJson, setMapActivities,
    getLink, getLinks, clearLink, selectLink, deleteLink,
    getTrackerGps,
    getTag, getTags, clearTag, selectTag, deleteTag,
    listDataModules, uploadDataModule, clearUploadResult,
    clearActivities, getApproval, clearApproval, updateApprovalPrinted,
    selectActiveIngredient, clearActiveIngredient, deleteActiveIngredient, getActiveIngredient, getActiveIngredients,
    selectProductCategory, clearProductCategory, deleteProductCategory, getProductCategory, getProductCategories,
    selectCropGenus, clearCropGenus, deleteCropGenus, getCropGenus, getCropGenuses, getGGAdminAreas, getEnergies,
    getStockMovments, importAccumulations, getFieldInCultivars, getNotifications, selectValve,
    setEstimateProduce, setCropType, setSeasonDataParam, saveSeasonData,
    deleteIngredient, getIngredients, getIngredient, selectIngredient,
    selectCompound, clearCompound, deleteCompound, getCompound, getCompounds,
    setActiveValves,
    getAlert, getAlerts, clearAlert, selectAlert, deleteAlert, setExecutedAlert,
    setNevigateOnCritical, wialonSyncFields, wialonGetUnits, wialonGetToken, wialonSaveToken, wialonDeleteToken, getTracks, setSelectedTracks, addSelectedTrack,
    fetchUpdates, clearUpdates, executehUpdates,
    setTrackMaxAvgSpeed, setTrackMinLength,
    getUserTags,saveUserTags, setTagsAuthorizations,
    saveTag, getTrackerActivity, clearTrackerActivity,
    selectResourceExternalCode,clearResourceExternalCode,saveResourceExternalCode,deleteResourceExternalCode,getResourceExternalCode,getResourceExternalCodes,
    setActivityTableFilterDeepSearch, setDomainHistoryTableFilter,

} from './actions/index';


export const defaultCenter = [37.8189, -122.4786];



export const PRIMARY_MAIN = '#66BA7A';
export const PRIMARY_DARK = '#49A05E';
export const PRIMARY_LIGHT = '#D9EEDE';
export const SECONDARY_LIGHT = '#F2F5F4';
export const SECONDARY_MAIN = '#585C59';
export const BORDER_COLOR = '#e8e8e8';
export const BORDER_COLOR_DARK = '#bdbdbd';
export const BACKGROUND = '#E9EEEC';
export const SECOND_TOP_LINE = BACKGROUND;


const App = (props) => {
    const { signOut, dir, lang } = props;
    const [theme, setTheme] = useState(null);

    useEffect(() => {
        props.init();
        props.loadTranslation(props.lang);
        setInterval(checkAuthenticated, 1000 * 60 * 2);
    }, []);


    useEffect(() => {
        setTheme(buildTheme(dir, lang));
    }, [dir]);


    const checkAuthenticated = () => {
        if (getJwtToken() === null) {
            signOut();
        }
    }

    if (theme) {
        document.body.dir = dir;
        return (
            <div dir={theme.direction}>
                <ThemeProvider theme={theme}>
                    <LocaleApplication dir={dir} {...props} />
                </ThemeProvider>
            </div>
        );
    }
    else return <div></div>
}

export default connect(
    state => ({
        selectedField: state.field.selectedField,
        createNewField: state.field.createNewField,
        showFieldNames: state.field.showFieldNames,
        showCropNames: state.field.showCropNames,
        showWind: state.field.showWind,
        ventusky: state.field.ventusky,
        showRainRadar: state.field.showRainRadar,
        showGovmap: state.field.showGovmap,
        showPests: state.field.showPests,
        pestsGeoJson: state.field.pestsGeoJson,
        trackerGps: state.field.trackerGps,
        showWaypoints: state.field.showWaypoints,
        waypointsGeoJson: state.field.waypointsGeoJson,
        showTracker: state.field.showTracker,
        mapRefDate: state.field.mapRefDate,
        mapInfectionLevel: state.field.mapInfectionLevel,
        mapPests: state.field.mapPests,
        mapTimeRange: state.field.mapTimeRange,
        mapActivities: state.field.mapActivities,

        showBaseFields: state.field.showBaseFields,
        showNdvi: state.field.showNdvi,
        mapBaseLayer: state.field.mapBaseLayer,
        selectedDomain: state.domain.selectedDomain,
        authenticated: state.auth.authenticated,
        authError: state.auth.error,
        lang: state.lang.lang,
        text: state.lang.text,
        dir: state.lang.dir,
        align: state.lang.align,
        global: state.account.global,
        ggAdminAreas: state.account.ggAdminAreas,
        maintenanceTypes: state.account.maintenanceTypes,
        marketMethods: state.account.marketMethods,
        riskLists: state.account.riskLists,
        riskTypes: state.account.riskTypes,
        winds: state.account.winds,
        user: state.account.user,
        isAdmin: state.account.isAdmin,
        isInspector: state.account.isInspector,
        acceptUpload: state.account.acceptUpload,
        currency: state.account.currency,
        mapApiKey: state.account.mapApiKey,
        googleMapKey: state.account.googleMapKey,
        bingMapKey: state.account.bingMapKey,
        costing: state.account.costing,
        fieldCrops: state.account.fieldCrops,
        plantations: state.account.plantations,
        cropType: state.account.cropType,
        message: state.message.message,
        variant: state.message.variant,
        drawPolygonMode: state.drawPolygon.drawMode,
        drawPolygon: state.drawPolygon.polygon,
        selectedSite: state.site.selectedSite,
        fields: state.field.fields,
        domains: state.field.domains,
        domainFilter: state.field.domainFilter,
        domainFilterOption: state.field.domainFilterOption,
        domainStatusFilter: state.field.domainStatusFilter,
        sites: state.site.sites,
        createNewSite: state.site.createNewSite,
        fieldSuggestions: state.field.fieldSuggestions,
        parentFields: state.parentField.parentFields,
        createNewParentField: state.parentField.createNewParentField,
        selectedParentField: state.parentField.selectedParentField,
        fieldFilter: state.dataFilter.fieldFilter,
        yearFilter: state.dataFilter.yearFilter,

        viewSize: state.dataFilter.viewSize,
        viewSizeOptions: state.dataFilter.viewSizeOptions,
        fieldFreeText: state.dataFilter.fieldFreeText,

        filterFields: state.dataFilter.fields,
        filterSites: state.dataFilter.sites,
        filterParentFields: state.dataFilter.parentFields,
        filterCrops: state.dataFilter.crops,
        filterVarieties: state.dataFilter.varieties,

        approval: state.activity.approval,
        activity: state.activity.activity,
        lastActivityUuid: state.activity.lastActivityUuid,
        reloadDomains: state.activity.reloadDomains,
        totalActivityCount: state.activity.totalActivityCount,
        waybills: state.activity.waybills,

        activities: state.activity.activities,
        activityTableFilter: state.activity.activityTableFilter,
        activityTableStart: state.activity.activityTableStart,
        activityTableEnd: state.activity.activityTableEnd,
        activityTableFreeText: state.activity.activityTableFreeText,
        fetchActivities: state.activity.fetchActivities,
        fetchingActivities: state.activity.fetchingActivities,
        activityTableSorting: state.activity.activityTableSorting,
        activityTableCurrentPage: state.activity.activityTableCurrentPage,
        activityTablePageSize: state.activity.activityTablePageSize,
        activityTableFreeTextDeepSearch: state.activity.activityTableFreeTextDeepSearch,
        domainHistoryTableFilter: state.activity.domainHistoryTableFilter,

        planActivities: state.activity.planActivities,
        planActivityTableFilter: state.activity.planActivityTableFilter,
        planActivityTableStart: state.activity.planActivityTableStart,
        planActivityTableEnd: state.activity.planActivityTableEnd,
        planActivityTableFreeText: state.activity.planActivityTableFreeText,
        planActivityTableSorting: state.activity.planActivityTableSorting,
        planActivityTableCurrentPage: state.activity.planActivityTableCurrentPage,
        planTotalActivityCount: state.activity.planTotalActivityCount,
        planFetchActivities: state.activity.planFetchActivities,
        fetchingPlanActivities: state.activity.fetchingPlanActivities,

        activityDefs: state.activityDef.activityDefs,
        selectedActivityDef: state.activityDef.selectedActivityDef,
        createNewActivityDef: state.activityDef.createNewActivityDef,

        activityDefTypes: state.activityDefType.activityDefTypes,
        selectedActivityDefType: state.activityDefType.selectedActivityDefType,
        createNewActivityDefType: state.activityDefType.createNewActivityDefType,


        equipment: state.resource.equipment,
        executors: state.resource.executors,
        substances: state.resource.substances,
        varieties: state.resource.varieties,
        pesticides: state.resource.pesticides,

        customers: state.resource.customers,
        products: state.resource.products,
        suppliers: state.resource.suppliers,
        defaultProduct: state.resource.defaultProduct,

        warehouses: state.warehouse.warehouses,
        selectedWarehouse: state.warehouse.selectedWarehouse,
        defaultWarehouse: state.warehouse.defaultWarehouse,
        createNewWarehouse: state.warehouse.createNewWarehouse,

        containers: state.container.containers,
        selectedContainer: state.container.selectedContainer,
        createNewContainer: state.container.createNewContainer,

        irrigationMethods: state.account.irrigationMethods,
        fertilizeMethods: state.account.fertilizeMethods,
        defaultMarketDestination: state.account.defaultMarketDestination,
        pageSize: state.account.pageSize,
        pageSizes: state.account.pageSizes,
        procurement: state.procurement.procurement,
        procuremenetFilter: state.procurement.procuremenetFilter,
        procuremenetStart: state.procurement.procuremenetStart,
        procuremenetEnd: state.procurement.procuremenetEnd,
        procuremenetFreeText: state.procurement.procuremenetFreeText,
        fetchProcuremenet: state.procurement.fetchProcuremenet,
        procurementCurrentPage: state.procurement.procurementCurrentPage,
        procurementTotalCount: state.procurement.procurementTotalCount,
        procurements: state.procurement.procurements,
        procurementSorting: state.procurement.procurementSorting,
        fetchingProcuremenet: state.procurement.fetchingProcuremenet,
        supplierInvoice: state.procurement.supplierInvoice,
        units: state.account.units,
        languages: state.account.languages,
        plantParts: state.account.plantParts,
        infectionLevels: state.account.infectionLevels,
        marketDestinations: state.account.marketDestinations,
        pesticideCategories: state.account.pesticideCategories,
        pesticideUnits: state.account.pesticideUnits,
        areaUnits: state.account.areaUnits,
        weightUnits: state.account.weightUnits,
        currencies: state.account.currencies,
        countries: state.account.countries,
        userTypes: state.account.userTypes,
        areaUnit: state.account.areaUnit,
        waterUnit: state.account.waterUnit,
        autoHour: state.account.autoHour,
        autoArea: state.account.autoArea,
        weightUnit: state.account.weightUnit,

        dashboard: state.dashboard.dashboard,
        financialDashboard: state.dashboard.financialDashboard,
        financialDashboard2: state.dashboard.financialDashboard2,
        fetchingFinancialDashboard: state.dashboard.fetchingFinancialDashboard,
        fetchingFinancialDashboard2: state.dashboard.fetchingFinancialDashboard2,

        quantitativeDashboard: state.dashboard.quantitativeDashboard,
        quantitativeDashboard2: state.dashboard.quantitativeDashboard2,
        fetchingQuantitativeDashboard: state.dashboard.fetchingQuantitativeDashboard,
        fetchingQuantitativeDashboard2: state.dashboard.fetchingQuantitativeDashboard,

        cropRotations: state.dashboard.cropRotations,

        users: state.admin.users,
        authorizations: state.admin.authorizations,
        editUser: state.admin.editUser,
        reloadUser: state.admin.reloadUser,
        userTags: state.admin.userTags,
        tagsAuthorizations: state.admin.tagsAuthorizations,

        selectedCustomerOrSupplier: state.resource.selectedCustomerOrSupplier,
        selectedExecutor: state.resource.selectedExecutor,
        selectedEquipment: state.resource.selectedEquipment,

        selectedVariety: state.resource.selectedVariety,
        selectedFertilizer: state.resource.selectedFertilizer,
        selectedWaterSource: state.resource.selectedWaterSource,

        selectedProduct: state.resource.selectedProduct,
        selectedPesticide: state.resource.selectedPesticide,
        selectedAccessory: state.resource.selectedAccessory,

        selectedCompost: state.resource.selectedCompost,
        selectedDisinfectant: state.resource.selectedDisinfectant,
        selectedBaseCrop: state.resource.selectedBaseCrop,
        selectedIngredient: state.resource.selectedIngredient,

        createNewResource: state.resource.createNewResource,

        accessories: state.resource.accessories,
        waterSources: state.resource.waterSources,
        composts: state.resource.composts,
        ingredients: state.resource.ingredients,

        disinfectants: state.resource.disinfectants,
        fertilizers: state.resource.fertilizers,
        baseCrops: state.resource.baseCrops,
        energies: state.resource.energies,
        fieldInCultivars: state.resource.fieldInCultivars,

        crops: state.crop.crops,
        selectedCrop: state.crop.selectedCrop,
        createNewCrop: state.crop.createNewCrop,

        selectionDomains: state.selection.selectionDomains,
        selectionDomainFilterOption: state.selection.selectionDomainFilterOption,
        selectionYearFilter: state.selection.selectionYearFilter,
        files: state.file.files,
        uploading: state.file.uploading,
        fetchFiles: state.file.fetchFiles,

        selectedInventoryUpdate: state.inventory.selectedInventoryUpdate,
        fetchInventoryUpdate: state.inventory.fetchInventoryUpdate,
        inventory: state.inventory.inventory,
        stockMovments: state.inventory.stockMovments,
        createNewInventoryUpdate: state.inventory.createNewInventoryUpdate,

        waterSystem: state.waterSystem.waterSystem,
        waterSysAccounts: state.waterSystem.waterSysAccounts,
        fertilizerHubs: state.waterSystem.fertilizerHubs,
        selectedFertilizerHub: state.waterSystem.selectedFertilizerHub,
        createNewFertilizerHub: state.waterSystem.createNewFertilizerHub,
        selectedValve: state.waterSystem.selectedValve,
        activeValves: state.waterSystem.activeValves,

        reports: state.report.reports,
        reportFontSize: state.report.reportFontSize,

        dataModules: state.importExport.dataModules,
        uploadResult: state.importExport.uploadResult,

        selectedTariff: state.tariff.selectedTariff,
        fetchTariffs: state.tariff.fetchTariffs,
        createNewTariff: state.tariff.createNewTariff,

        selectedMaintenance: state.maintenance.selectedMaintenance,
        fetchMaintenance: state.maintenance.fetchMaintenance,
        createNewMaintenance: state.maintenance.createNewMaintenance,

        riskAssessment: state.riskAssessment.riskAssessment,
        risks: state.riskAssessment.risks,
        selectedRisk: state.riskAssessment.selectedRisk,
        pests: state.pest.pests,
        createNewPest: state.pest.createNewPest,
        selectedPest: state.pest.selectedPest,


        pesticideLists: state.pesticideList.pesticideLists,
        selectedPesticideList: state.pesticideList.selectedPesticideList,
        selectedPesticideListPesticide: state.pesticideList.selectedPesticideListPesticide,
        createNewPesticideList: state.pesticideList.createNewPesticideList,

        businesses: state.business.businesses,
        selectedBusiness: state.business.selectedBusiness,
        createNewBusiness: state.business.createNewBusiness,
        selectedUser: state.business.selectedUser,
        businessUsers: state.business.businessUsers,
        selectedBusinessUser: state.business.selectedBusinessUser,
        fieldInGroups: state.business.fieldInGroups,
        fieldInCompanies: state.business.fieldInCompanies,
        linkedGrowers: state.business.linkedGrowers,


        execActivityTableOptions: state.filterOption.execActivityTableOptions,
        planActivityTableOptions: state.filterOption.planActivityTableOptions,
        execActivityTypeFilterOptions: state.filterOption.execActivityTypeFilterOptions,
        executorOptions: state.filterOption.executorOptions,
        cropOptions: state.filterOption.cropOptions,
        fieldOptions: state.filterOption.fieldOptions,
        pesticideOptions: state.filterOption.pesticideOptions,
        pestOptions: state.filterOption.pestOptions,
        growerOptions: state.filterOption.growerOptions,

        compoundOptions: state.filterOption.compoundOptions,

        fieldInProductOptions: state.filterOption.fieldInProductOptions,
        fieldInPolygonOptions: state.filterOption.fieldInPolygonOptions,
        fertilizerOptions: state.filterOption.fertilizerOptions,
        equipmentOptions: state.filterOption.equipmentOptions,
        productOptions: state.filterOption.productOptions,
        varietyOptions: state.filterOption.varietyOptions,
        varietyResourceOptions: state.filterOption.varietyResourceOptions,
        waterSourceOptions: state.filterOption.waterSourceOptions,
        accessoryOptions: state.filterOption.accessoryOptions,
        activityDefTypeOptions: state.filterOption.activityDefTypeOptions,
        compostOptions: state.filterOption.compostOptions,
        ingredientOptions: state.filterOption.ingredientOptions,

        disinfectantOptions: state.filterOption.disinfectantOptions,
        energyOptions: state.filterOption.energyOptions,
        resourceTypeOptions: state.filterOption.resourceTypeOptions,
        parentFieldOptions: state.filterOption.parentFieldOptions,
        activeOptions: state.filterOption.activeOptions,
        siteOptions: state.filterOption.siteOptions,
        warehouseOptions: state.filterOption.warehouseOptions,
        customerAndSupplierOptions: state.filterOption.customerAndSupplierOptions,
        containerOptions: state.filterOption.containerOptions,
        pesticideListOptions: state.filterOption.pesticideListOptions,

        executorTypeOptions: state.filterOption.executorTypeOptions,
        equipmentCategoryOptions: state.filterOption.equipmentCategoryOptions,

        baseCropOptions: state.filterOption.baseCropOptions,
        activityDefOptions: state.filterOption.activityDefOptions,
        agromonitoringImagerySearch: state.agromonitoring.agromonitoringImagerySearch,
        ndviHistory: state.agromonitoring.ndviHistory,
        polygonSoilData: state.agromonitoring.polygonSoilData,
        polygonUvi: state.agromonitoring.polygonUvi,
        polygonAccumulatedTemp: state.agromonitoring.polygonAccumulatedTemp,
        polygonAccumulatedPrecip: state.agromonitoring.polygonAccumulatedPrecip,
        polygonWeather: state.agromonitoring.polygonWeather,
        polygonsHistory: state.agromonitoring.polygonsHistory,
        imageryDate: state.agromonitoring.imageryDate,
        paletteid: state.agromonitoring.paletteid,


        gisPolygons: state.gis.gisPolygons,
        gisPolygonNameAttr: state.gis.gisPolygonNameAttr,
        gisPolygonIdAttr: state.gis.gisPolygonIdAttr,
        gisPolygonAttributes: state.gis.gisPolygonAttributes,


        links: state.link.links,
        selectedLink: state.link.selectedLink,
        createNewLink: state.link.createNewLink,

        tags: state.tag.tags,
        genericTags: state.tag.genericTags,
        selectedTag: state.tag.selectedTag,
        createNewTag: state.tag.createNewTag,

        resourceExternalCodes: state.resourceExternalCode.resourceExternalCodes,
        selectedResourceExternalCode: state.resourceExternalCode.selectedResourceExternalCode,
        createNewResourceExternalCode: state.resourceExternalCode.createNewResourceExternalCode,

        alerts: state.alert.alerts,
        selectedAlert: state.alert.selectedAlert,
        createNewAlert: state.alert.createNewAlert,

        compounds: state.compounds.compounds,
        selectedCompound: state.compounds.selectedCompound,
        createNewCompound: state.compounds.createNewCompound,

        activeIngredients: state.activeIngredient.activeIngredients,
        selectedActiveIngredient: state.activeIngredient.selectedActiveIngredient,
        createNewActiveIngredient: state.activeIngredient.createNewActiveIngredient,

        productCategories: state.productCategory.productCategories,
        selectedProduceCategory: state.productCategory.selectedProduceCategory,
        createNewProductCategory: state.productCategory.createNewProductCategory,

        cropGenuses: state.cropGenus.cropGenuses,
        selectedCropGenus: state.cropGenus.selectedCropGenus,
        createNewCropGenus: state.cropGenus.createNewCropGenus,

        notifications: state.notifications.notifications,
        fetchNotifications: state.notifications.fetchNotifications,
        navigateOnCtitical: state.notifications.navigateOnCtitical,

        wialonToken: state.tracker.wialonToken,
        wialonUnits: state.tracker.wialonUnits,
        wialonSynching: state.tracker.wialonSynching,
        tracks: state.tracker.tracks,
        tracksCount: state.tracker.tracksCount,
        selectedTracks: state.tracker.selectedTracks,
        fullDataTracks: state.tracker.fullDataTracks,
        trackMinLength: state.tracker.trackMinLength,
        trackMaxAvgSpeed: state.tracker.trackMaxAvgSpeed,
        trackerActivity: state.tracker.trackerActivity,
        updates: state.updates.updates,
    }),
    {
        signOut, loadTranslation, init, selectField, getGlobalData,
        getDomainsByYear, getSelectionDomainsByYear, setSelectionYearFilter,
        setMessage, setWarnMessage, setDrawPolygonMode, setDrawPolygon,
        getSite, getSites, saveSite, selectSite, deleteSite, clearSite,
        sortFields, getField, deleteField, selectDomain, toggleFieldLayer,
        getDomain, deleteDomain, saveDomain, getFields,
        setFieldFilter, setYearFilter,
        setActivity, getActivity,
        getNewActivity, deleteParentField, selectParentField, getParentField, getParentFields,
        getWaybills, setWaybills,
        getProcurement, setProcurement,
        clearDashboard,
        getPlantationDashboard, getDomainDashboard, getFieldCropRotations,
        getUsers, getAuthorizations, toggleAuthorizations, selectUser,
        getCustomersAndSuppliers, getCustomerOrSupplier, selectCustomerOrSupplier, deleteCustomerOrSupplier,
        deleteExecutor, getExecutors, getExecutor, selectExecutor,
        deleteEquipment, getEquipments, getEquipment, selectEquipment,
        deleteVariety, getVarieties, getVariety, selectVariety,
        deleteFertilizer, getFertilizers, getFertilizer, selectFertilizer,
        deleteWaterSource, getWaterSources, getWaterSource, selectWaterSource,
        deleteProduct, getProducts, getProduct, selectProduct,
        deletePesticide, getPesticides, getPesticide, selectPesticide,
        deleteAccessory, getAccessories, getAccessory, selectAccessory,
        deleteContainer, getContainers, getContainer, selectContainer, saveContainer,
        deleteCrop, getCrops, getCrop, selectCrop, saveCrop,
        deleteBaseCrop, getBaseCrops, getBaseCrop, selectBaseCrop,
        deleteWarehouse, getWarehouses, getWarehouse, selectWarehouse, saveWarehouse,
        deleteActivityDef, getActivityDefs, getActivityDef, selectActivityDef, saveActivityDef,
        deleteActivityDefType, getActivityDefTypes, getActivityDefType, selectActivityDefType, saveActivityDefType,
        deleteCompost, getComposts, getCompost, selectCompost,
        deleteDisinfectant, getDisinfectants, getDisinfectant, selectDisinfectant,
        getFiles, uploadFiles, uploadFile, deleteFile, setErrorMessage, moveFile,
        getInventoryUpdate, deleteInventoryUpdate, selectInventoryUpdate, setFetchInventoryUpdate, getInventory,
        getWaterSystem, clearWaterSystem, saveValve, saveWaterSystemConfig, deleteWaterSystemConfig, syncWaterSystem,
        setDomainViewSize,
        getReportMetaData, emailReport,
        selectTariff, getTariff, deleteTariff, setFetchTariffs,
        setFetchMaintenance, selectMaintenance, getMaintenance, deleteMaintenance, duplicateMaintenance, clearMaintenance,
        setRiskAssessment, getRiskAssessment, getRisks, getRisk, selectRisk, deleteRisk,
        clearResource,
        deletePest, getPests, getPest, selectPest, clearPest,
        selectPesticideList, getPesticideList, getPesticideLists, deletePesticideList, selectPesticideListPesticide, clearPesticideList,
        duplicatePesticideList, deletePesticideListPesticide,
        saveBusiness, deleteBusiness, getBusinesses, getBusiness, selectBusiness, clearBusiness, selectBusinessUser,
        setActivityTableFilter, setActivityTableFetch, setActivityTableFreeText, setActivityTableEnd, setActivityTableStart,
        setActivityTableSorting, setActivityTableCurrentPage, getActivities,
        quickSaveResource,
        getFieldInPolygons,
        clearActivityDefType, clearActivityDef, clearTariff, clearField, clearParentField, clearWarehouse, clearContainer, clearCrop, clearInventoryUpdate,
        setUserMapCenter, setFieldFilterFreeText,
        agromonitoringSearchPolygon, getNdviHistory, getSenecingData, getPolygonAccumulatedData,
        getFianancialDashboard, getQuantitativeDashboard,
        recoverPassword, setTablePageSize,
        setProcurementFilterEnd, setProcurementFilterStart, setProcurementFilterFreeText, setProcurementFilter, getProcurements,
        setProcurementCurrentPage, setProcurementSorting,
        setPlanActivityTableFilter, setPlanActivityTableFreeText, setPlanActivityTableStart, setPlanActivityTableEnd, setPlanActivityTableCurrentPage, setPlanActivityTableSorting,
        getPlanActivities, setMapBaseLayer, duplicateTariff,
        setSupplierInvoice, duplicateValve, deletedValve,
        setDomainStatusFilter,
        deleteFertilizerHub, getFertilizerHubs, getFertilizerHub, selectFertilizerHub, clearFertilizerHub,
        listWaterSystemAccounts,
        getLinkedGrowers, agromonitoringSearchPolygons, changeImageryDate, changeNdviPalette,
        getGisPolygons, getGisPolygonId, setGisPolygonId, getGisPolygonName, setGisPolygonName,
        getGisPolygonAttributes, deleteGisData,
        getPestGeoJson, setMapRefDate, setMapInfectionLevel, setMapTimeRange, setMapPests,
        getWaypointsGeoJson, setMapActivities,
        getLink, getLinks, clearLink, selectLink, deleteLink,
        getTrackerGps,
        getTag, getTags, clearTag, selectTag, deleteTag,
        listDataModules, uploadDataModule, clearUploadResult,
        clearActivities, getApproval, clearApproval, updateApprovalPrinted,
        selectActiveIngredient, clearActiveIngredient, deleteActiveIngredient, getActiveIngredient, getActiveIngredients,
        selectProductCategory, clearProductCategory, deleteProductCategory, getProductCategory, getProductCategories,
        selectCropGenus, clearCropGenus, deleteCropGenus, getCropGenus, getCropGenuses, getGGAdminAreas, getEnergies,
        getStockMovments, importAccumulations, getFieldInCultivars, getNotifications, selectValve, setEstimateProduce, setCropType,
        setSeasonDataParam, saveSeasonData,
        deleteIngredient, getIngredients, getIngredient, selectIngredient,
        selectCompound, clearCompound, deleteCompound, getCompound, getCompounds,
        setActiveValves,
        getAlert, getAlerts, clearAlert, selectAlert, deleteAlert, setExecutedAlert,
        setNevigateOnCritical,
        wialonSyncFields, wialonGetUnits, wialonGetToken, wialonSaveToken, wialonDeleteToken, getTracks, setSelectedTracks, addSelectedTrack,
        fetchUpdates, clearUpdates, executehUpdates,
        setTrackMaxAvgSpeed, setTrackMinLength,
        getUserTags,saveUserTags, setTagsAuthorizations,
        saveTag,getTrackerActivity, clearTrackerActivity,
        selectResourceExternalCode,clearResourceExternalCode,saveResourceExternalCode,deleteResourceExternalCode,getResourceExternalCode,getResourceExternalCodes,
        setActivityTableFilterDeepSearch, setDomainHistoryTableFilter
    })(App);
